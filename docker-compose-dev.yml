version: '3.8'

services:
  nginx:
    restart: always
    depends_on:
      - frontend
      - backend
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "3555:80"

  backend:
    restart: always
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./backend/Dockerfile-dev
    volumes:
      - repo_data:/repos
      - uploads:/uploads
      - ./backend/src:/backend/src
      - ./logs:/logs
    environment:
      - DATABASE_URL=postgres://postgres:example@db:5432/postgres
      - NODE_ENV=development
      - MAX_RUNNING_TASKS=10
    env_file:
      - ./redis/.env
      - ./runner/.env
      - ./backend/.env

  frontend:
    restart: always
    depends_on:
      - backend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile-dev
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=/api
      - WATCHPACK_POLLING true
    volumes:
      - ./frontend/src:/frontend/src
      - ./frontend/components:/frontend/components
      - ./frontend/contexts:/frontend/contexts
      - ./frontend/pages:/frontend/pages
      - ./frontend/public:/frontend/public
      - ./frontend/styles:/frontend/styles
      - ./frontend/axios.ts:/frontend/axios.ts
      - ./docs:/docs

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    restart: always
    build:
      context: ./redis
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    env_file:
      - ./redis/.env

volumes:
  db_data:
  repo_data:
  uploads:
  redis_data:
